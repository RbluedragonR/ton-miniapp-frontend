"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const boc_1 = require("./boc");
const topologicalSort_1 = require("./utils/topologicalSort");
const NativeCell = require('tonweb/src/boc/Cell').Cell;
describe('boc-serialize', () => {
    it('should correctly serialize', async () => {
        const data = 'te6ccgEBGAEA6AACAxDCAQIBY6kNoJVjtnQKS39oygn723awA1zBAUUKFuLnm5heu7OKDFdoYWxlcyBUb2tlbgNXSExAAwEZodzWUAAAAAMgAAADJgQAPh5odHRwczovL3RvbndoYWxlcy5jb20vY29udGVudC8CA8zABQYCASAHCAIBSBQVAgEgCQoCASAPEAALo4AAACzAAgEgCwwACbYAAADDAgFIDQ4ACUAAAAY4AAlQAAAF+AALpgAAADBAAgEgERcCAVgSEwAJQAAABcgACVAAAAXoAAuhgAAALsACASAWFwAJtAAAALcACdgAAALU';
        const dataBuffer = Buffer.from(data, 'base64');
        const cell = (0, boc_1.deserializeBoc)(dataBuffer)[0];
        const data2 = (await cell.toBoc({ idx: false, crc32: false }));
        const cell2 = (0, boc_1.deserializeBoc)(data2)[0];
        const header1 = (0, boc_1.parseBocHeader)(dataBuffer);
        const header2 = (0, boc_1.parseBocHeader)(data2);
        console.warn(header1);
        console.warn(header2);
        const topology = await (0, topologicalSort_1.topologicalSort)(cell);
        console.warn(topology.map((v, i) => v.refs));
        // Header 1
        let cells_data = header1.cells_data;
        let cells_array = [];
        let refs_array = [];
        for (let ci = 0; ci < header1.cells_num; ci++) {
            let dd = (0, boc_1.deserializeCellData)(cells_data, header1.size_bytes);
            cells_data = dd.residue;
            cells_array.push(dd.cell);
            refs_array.push(dd.refs);
        }
        console.warn(refs_array);
        let cells_data2 = header2.cells_data;
        let cells_array2 = [];
        let refs_array2 = [];
        for (let ci = 0; ci < header2.cells_num; ci++) {
            let dd = (0, boc_1.deserializeCellData)(cells_data2, header2.size_bytes);
            cells_data2 = dd.residue;
            cells_array2.push(dd.cell);
            refs_array2.push(dd.refs);
        }
        console.warn(refs_array2);
    });
});
